                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.7 #12016 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _puts
                                     13 	.globl _set_sprite_data
                                     14 	.globl _delay
                                     15 	.globl _smileFace1
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area _DATA
      000000                         23 _smileFace1::
      000000                         24 	.ds 16
                                     25 ;--------------------------------------------------------
                                     26 ; absolute external ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DABS (ABS)
                                     29 ;--------------------------------------------------------
                                     30 ; global & static initialisations
                                     31 ;--------------------------------------------------------
                                     32 	.area _HOME
                                     33 	.area _GSINIT
                                     34 	.area _GSFINAL
                                     35 	.area _GSINIT
                                     36 ;smile.c:26: unsigned char smileFace1[] =
      000000 21r00r00                37 	ld	hl, #_smileFace1
      000003 36 7E                   38 	ld	(hl), #0x7e
      000005 21r01r00                39 	ld	hl, #(_smileFace1 + 0x0001)
      000008 36 7E                   40 	ld	(hl), #0x7e
      00000A 21r02r00                41 	ld	hl, #(_smileFace1 + 0x0002)
      00000D 36 FF                   42 	ld	(hl), #0xff
      00000F 21r03r00                43 	ld	hl, #(_smileFace1 + 0x0003)
      000012 36 81                   44 	ld	(hl), #0x81
      000014 21r04r00                45 	ld	hl, #(_smileFace1 + 0x0004)
      000017 36 FF                   46 	ld	(hl), #0xff
      000019 21r05r00                47 	ld	hl, #(_smileFace1 + 0x0005)
      00001C 36 A5                   48 	ld	(hl), #0xa5
      00001E 21r06r00                49 	ld	hl, #(_smileFace1 + 0x0006)
      000021 36 FF                   50 	ld	(hl), #0xff
      000023 21r07r00                51 	ld	hl, #(_smileFace1 + 0x0007)
      000026 36 81                   52 	ld	(hl), #0x81
      000028 21r08r00                53 	ld	hl, #(_smileFace1 + 0x0008)
      00002B 36 FF                   54 	ld	(hl), #0xff
      00002D 21r09r00                55 	ld	hl, #(_smileFace1 + 0x0009)
      000030 36 A5                   56 	ld	(hl), #0xa5
      000032 21r0Ar00                57 	ld	hl, #(_smileFace1 + 0x000a)
      000035 36 FF                   58 	ld	(hl), #0xff
      000037 21r0Br00                59 	ld	hl, #(_smileFace1 + 0x000b)
      00003A 36 BD                   60 	ld	(hl), #0xbd
      00003C 21r0Cr00                61 	ld	hl, #(_smileFace1 + 0x000c)
      00003F 36 FF                   62 	ld	(hl), #0xff
      000041 21r0Dr00                63 	ld	hl, #(_smileFace1 + 0x000d)
      000044 36 81                   64 	ld	(hl), #0x81
      000046 21r0Er00                65 	ld	hl, #(_smileFace1 + 0x000e)
      000049 36 7E                   66 	ld	(hl), #0x7e
      00004B 21r0Fr00                67 	ld	hl, #(_smileFace1 + 0x000f)
      00004E 36 7E                   68 	ld	(hl), #0x7e
                                     69 ;--------------------------------------------------------
                                     70 ; Home
                                     71 ;--------------------------------------------------------
                                     72 	.area _HOME
                                     73 	.area _HOME
                                     74 ;--------------------------------------------------------
                                     75 ; code
                                     76 ;--------------------------------------------------------
                                     77 	.area _CODE
                                     78 ;main.c:4: void main () {
                                     79 ;	---------------------------------
                                     80 ; Function main
                                     81 ; ---------------------------------
      000000                         82 _main::
                                     83 ;main.c:7: printf ("varun kedia\n");
      000000 21r46r00                84 	ld	hl, #___str_4
      000003 E5                      85 	push	hl
      000004 CDr00r00                86 	call	_puts
      000007 E8 02                   87 	add	sp, #2
                                     88 ;main.c:8: set_sprite_data (0,2,smileFace1);
      000009 21r00r00                89 	ld	hl, #_smileFace1
      00000C E5                      90 	push	hl
      00000D 3E 02                   91 	ld	a, #0x02
      00000F F5                      92 	push	af
      000010 33                      93 	inc	sp
      000011 AF                      94 	xor	a, a
      000012 F5                      95 	push	af
      000013 33                      96 	inc	sp
      000014 CDr00r00                97 	call	_set_sprite_data
      000017 E8 04                   98 	add	sp, #4
                                     99 ;c:/users/purpl/desktop/gbdk/include/gb/gb.h:1004: shadow_OAM[nb].tile=tile;
      000019 21r02r00               100 	ld	hl, #(_shadow_OAM + 0x0002)
      00001C 36 00                  101 	ld	(hl), #0x00
                                    102 ;c:/users/purpl/desktop/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
      00001E 21r00r00               103 	ld	hl, #_shadow_OAM
                                    104 ;c:/users/purpl/desktop/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      000021 3E 4E                  105 	ld	a, #0x4e
      000023 22                     106 	ld	(hl+), a
      000024 36 58                  107 	ld	(hl), #0x58
                                    108 ;main.c:11: SHOW_SPRITES;
      000026 F0r00                  109 	ldh	a, (_LCDC_REG+0)
      000028 F6 02                  110 	or	a, #0x02
      00002A E0r00                  111 	ldh	(_LCDC_REG+0),a
                                    112 ;main.c:12: while (1) {
      00002C 01 00 00               113 	ld	bc, #0x0000
      00002F                        114 00102$:
                                    115 ;main.c:13: move_sprite(0,10+i,10+i);
      00002F 79                     116 	ld	a, c
      000030 C6 0A                  117 	add	a, #0x0a
                                    118 ;c:/users/purpl/desktop/gbdk/include/gb/gb.h:1077: OAM_item_t * itm = &shadow_OAM[nb];
                                    119 ;c:/users/purpl/desktop/gbdk/include/gb/gb.h:1078: itm->y=y, itm->x=x;
      000032 5F                     120 	ld	e, a
      000033 21r00r00               121 	ld	hl, #_shadow_OAM
      000036 22                     122 	ld	(hl+), a
      000037 73                     123 	ld	(hl), e
                                    124 ;main.c:14: delay(1000);
      000038 C5                     125 	push	bc
      000039 21 E8 03               126 	ld	hl, #0x03e8
      00003C E5                     127 	push	hl
      00003D CDr00r00               128 	call	_delay
      000040 E8 02                  129 	add	sp, #2
      000042 C1                     130 	pop	bc
                                    131 ;main.c:15: i++;
      000043 03                     132 	inc	bc
                                    133 ;main.c:17: }
      000044 18 E9                  134 	jr	00102$
      000046                        135 ___str_4:
      000046 68 65 6C 6C 6F 20 77   136 	.ascii "hello world"
             6F 72 6C 64
      000051 0A                     137 	.db 0x0a
      000052 76 61 72 75 6E 20 6B   138 	.ascii "varun kedia"
             65 64 69 61
      00005D 00                     139 	.db 0x00
                                    140 	.area _CODE
                                    141 	.area _CABS (ABS)
